import numpy as np
from scipy.integrate import odeint
from ADA_Lorenz_63 import ADA_Lorenz_63
from ADA_Lorenz_96 import ADA_Lorenz_96
def ADA_model_forecasting(x,GD):

    # initializations
    N, n = x.shape;
    xf = np.zeros([N,n]);
    xf_mean = np.zeros([N,n]);

    if (GD.model == 'Lorenz_63'):
        for i_N in range(0,N):
            S = odeint(ADA_Lorenz_63,x[i_N,:],np.arange(0,GD.dt_integration+0.000001,GD.dt_integration),args=(GD.parameters.sigma,GD.parameters.rho,GD.parameters.beta));
            xf[i_N,:] = S[-1,:];

    elif (GD.model == 'Lorenz_96'):
        for i_N in range(0,N):
            S = odeint(ADA_Lorenz_96,x[i_N,:],np.arange(0,GD.dt_integration+0.000001,GD.dt_integration),args=(GD.parameters.F,GD.parameters.J));
            xf[i_N,:] = S[-1,:];

    xf_mean = xf;
    return xf, xf_mean
            
            
